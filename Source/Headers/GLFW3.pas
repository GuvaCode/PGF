unit GLFW3;

{$mode ObjFPC}

interface

const
{$IFDEF WINDOWS}
  GLFW3_LIB = 'glfw3.dll';
  {$ELSE}
    {$IFDEF DARWIN}
  GLFW3_LIB = 'libglfw3.dylib';
    {$ELSE}
  GLFW3_LIB = 'libglfw3.so';
    {$ENDIF}
{$ENDIF}
  _PU = '';
  GLFW_VERSION_MAJOR = 3;
  GLFW_VERSION_MINOR = 2;
  GLFW_VERSION_REVISION = 1;
  GLFW_TRUE = 1;
  GLFW_FALSE = 0;
  GLFW_RELEASE = 0;
  GLFW_PRESS = 1;
  GLFW_REPEAT = 2;
  GLFW_KEY_UNKNOWN = -1;
  GLFW_KEY_SPACE = 32;
  GLFW_KEY_APOSTROPHE = 39;
  GLFW_KEY_COMMA = 44;
  GLFW_KEY_MINUS = 45;
  GLFW_KEY_PERIOD = 46;
  GLFW_KEY_SLASH = 47;
  GLFW_KEY_0 = 48;
  GLFW_KEY_1 = 49;
  GLFW_KEY_2 = 50;
  GLFW_KEY_3 = 51;
  GLFW_KEY_4 = 52;
  GLFW_KEY_5 = 53;
  GLFW_KEY_6 = 54;
  GLFW_KEY_7 = 55;
  GLFW_KEY_8 = 56;
  GLFW_KEY_9 = 57;
  GLFW_KEY_SEMICOLON = 59;
  GLFW_KEY_EQUAL = 61;
  GLFW_KEY_A = 65;
  GLFW_KEY_B = 66;
  GLFW_KEY_C = 67;
  GLFW_KEY_D = 68;
  GLFW_KEY_E = 69;
  GLFW_KEY_F = 70;
  GLFW_KEY_G = 71;
  GLFW_KEY_H = 72;
  GLFW_KEY_I = 73;
  GLFW_KEY_J = 74;
  GLFW_KEY_K = 75;
  GLFW_KEY_L = 76;
  GLFW_KEY_M = 77;
  GLFW_KEY_N = 78;
  GLFW_KEY_O = 79;
  GLFW_KEY_P = 80;
  GLFW_KEY_Q = 81;
  GLFW_KEY_R = 82;
  GLFW_KEY_S = 83;
  GLFW_KEY_T = 84;
  GLFW_KEY_U = 85;
  GLFW_KEY_V = 86;
  GLFW_KEY_W = 87;
  GLFW_KEY_X = 88;
  GLFW_KEY_Y = 89;
  GLFW_KEY_Z = 90;
  GLFW_KEY_LEFT_BRACKET = 91;
  GLFW_KEY_BACKSLASH = 92;
  GLFW_KEY_RIGHT_BRACKET = 93;
  GLFW_KEY_GRAVE_ACCENT = 96;
  GLFW_KEY_WORLD_1 = 161;
  GLFW_KEY_WORLD_2 = 162;
  GLFW_KEY_ESCAPE = 256;
  GLFW_KEY_ENTER = 257;
  GLFW_KEY_TAB = 258;
  GLFW_KEY_BACKSPACE = 259;
  GLFW_KEY_INSERT = 260;
  GLFW_KEY_DELETE = 261;
  GLFW_KEY_RIGHT = 262;
  GLFW_KEY_LEFT = 263;
  GLFW_KEY_DOWN = 264;
  GLFW_KEY_UP = 265;
  GLFW_KEY_PAGE_UP = 266;
  GLFW_KEY_PAGE_DOWN = 267;
  GLFW_KEY_HOME = 268;
  GLFW_KEY_END = 269;
  GLFW_KEY_CAPS_LOCK = 280;
  GLFW_KEY_SCROLL_LOCK = 281;
  GLFW_KEY_NUM_LOCK = 282;
  GLFW_KEY_PRINT_SCREEN = 283;
  GLFW_KEY_PAUSE = 284;
  GLFW_KEY_F1 = 290;
  GLFW_KEY_F2 = 291;
  GLFW_KEY_F3 = 292;
  GLFW_KEY_F4 = 293;
  GLFW_KEY_F5 = 294;
  GLFW_KEY_F6 = 295;
  GLFW_KEY_F7 = 296;
  GLFW_KEY_F8 = 297;
  GLFW_KEY_F9 = 298;
  GLFW_KEY_F10 = 299;
  GLFW_KEY_F11 = 300;
  GLFW_KEY_F12 = 301;
  GLFW_KEY_F13 = 302;
  GLFW_KEY_F14 = 303;
  GLFW_KEY_F15 = 304;
  GLFW_KEY_F16 = 305;
  GLFW_KEY_F17 = 306;
  GLFW_KEY_F18 = 307;
  GLFW_KEY_F19 = 308;
  GLFW_KEY_F20 = 309;
  GLFW_KEY_F21 = 310;
  GLFW_KEY_F22 = 311;
  GLFW_KEY_F23 = 312;
  GLFW_KEY_F24 = 313;
  GLFW_KEY_F25 = 314;
  GLFW_KEY_KP_0 = 320;
  GLFW_KEY_KP_1 = 321;
  GLFW_KEY_KP_2 = 322;
  GLFW_KEY_KP_3 = 323;
  GLFW_KEY_KP_4 = 324;
  GLFW_KEY_KP_5 = 325;
  GLFW_KEY_KP_6 = 326;
  GLFW_KEY_KP_7 = 327;
  GLFW_KEY_KP_8 = 328;
  GLFW_KEY_KP_9 = 329;
  GLFW_KEY_KP_DECIMAL = 330;
  GLFW_KEY_KP_DIVIDE = 331;
  GLFW_KEY_KP_MULTIPLY = 332;
  GLFW_KEY_KP_SUBTRACT = 333;
  GLFW_KEY_KP_ADD = 334;
  GLFW_KEY_KP_ENTER = 335;
  GLFW_KEY_KP_EQUAL = 336;
  GLFW_KEY_LEFT_SHIFT = 340;
  GLFW_KEY_LEFT_CONTROL = 341;
  GLFW_KEY_LEFT_ALT = 342;
  GLFW_KEY_LEFT_SUPER = 343;
  GLFW_KEY_RIGHT_SHIFT = 344;
  GLFW_KEY_RIGHT_CONTROL = 345;
  GLFW_KEY_RIGHT_ALT = 346;
  GLFW_KEY_RIGHT_SUPER = 347;
  GLFW_KEY_MENU = 348;
  GLFW_KEY_LAST = GLFW_KEY_MENU;
  GLFW_MOD_SHIFT = $0001;
  GLFW_MOD_CONTROL = $0002;
  GLFW_MOD_ALT = $0004;
  GLFW_MOD_SUPER = $0008;
  GLFW_MOUSE_BUTTON_1 = 0;
  GLFW_MOUSE_BUTTON_2 = 1;
  GLFW_MOUSE_BUTTON_3 = 2;
  GLFW_MOUSE_BUTTON_4 = 3;
  GLFW_MOUSE_BUTTON_5 = 4;
  GLFW_MOUSE_BUTTON_6 = 5;
  GLFW_MOUSE_BUTTON_7 = 6;
  GLFW_MOUSE_BUTTON_8 = 7;
  GLFW_MOUSE_BUTTON_LAST = GLFW_MOUSE_BUTTON_8;
  GLFW_MOUSE_BUTTON_LEFT = GLFW_MOUSE_BUTTON_1;
  GLFW_MOUSE_BUTTON_RIGHT = GLFW_MOUSE_BUTTON_2;
  GLFW_MOUSE_BUTTON_MIDDLE = GLFW_MOUSE_BUTTON_3;
  GLFW_JOYSTICK_1 = 0;
  GLFW_JOYSTICK_2 = 1;
  GLFW_JOYSTICK_3 = 2;
  GLFW_JOYSTICK_4 = 3;
  GLFW_JOYSTICK_5 = 4;
  GLFW_JOYSTICK_6 = 5;
  GLFW_JOYSTICK_7 = 6;
  GLFW_JOYSTICK_8 = 7;
  GLFW_JOYSTICK_9 = 8;
  GLFW_JOYSTICK_10 = 9;
  GLFW_JOYSTICK_11 = 10;
  GLFW_JOYSTICK_12 = 11;
  GLFW_JOYSTICK_13 = 12;
  GLFW_JOYSTICK_14 = 13;
  GLFW_JOYSTICK_15 = 14;
  GLFW_JOYSTICK_16 = 15;
  GLFW_JOYSTICK_LAST = GLFW_JOYSTICK_16;
  GLFW_NOT_INITIALIZED = $00010001;
  GLFW_NO_CURRENT_CONTEXT = $00010002;
  GLFW_INVALID_ENUM = $00010003;
  GLFW_INVALID_VALUE = $00010004;
  GLFW_OUT_OF_MEMORY = $00010005;
  GLFW_API_UNAVAILABLE = $00010006;
  GLFW_VERSION_UNAVAILABLE = $00010007;
  GLFW_PLATFORM_ERROR = $00010008;
  GLFW_FORMAT_UNAVAILABLE = $00010009;
  GLFW_NO_WINDOW_CONTEXT = $0001000A;
  GLFW_FOCUSED = $00020001;
  GLFW_ICONIFIED = $00020002;
  GLFW_RESIZABLE = $00020003;
  GLFW_VISIBLE = $00020004;
  GLFW_DECORATED = $00020005;
  GLFW_AUTO_ICONIFY = $00020006;
  GLFW_FLOATING = $00020007;
  GLFW_MAXIMIZED = $00020008;
  GLFW_RED_BITS = $00021001;
  GLFW_GREEN_BITS = $00021002;
  GLFW_BLUE_BITS = $00021003;
  GLFW_ALPHA_BITS = $00021004;
  GLFW_DEPTH_BITS = $00021005;
  GLFW_STENCIL_BITS = $00021006;
  GLFW_ACCUM_RED_BITS = $00021007;
  GLFW_ACCUM_GREEN_BITS = $00021008;
  GLFW_ACCUM_BLUE_BITS = $00021009;
  GLFW_ACCUM_ALPHA_BITS = $0002100A;
  GLFW_AUX_BUFFERS = $0002100B;
  GLFW_STEREO = $0002100C;
  GLFW_SAMPLES = $0002100D;
  GLFW_SRGB_CAPABLE = $0002100E;
  GLFW_REFRESH_RATE = $0002100F;
  GLFW_DOUBLEBUFFER = $00021010;
  GLFW_CLIENT_API = $00022001;
  GLFW_CONTEXT_VERSION_MAJOR = $00022002;
  GLFW_CONTEXT_VERSION_MINOR = $00022003;
  GLFW_CONTEXT_REVISION = $00022004;
  GLFW_CONTEXT_ROBUSTNESS = $00022005;
  GLFW_OPENGL_FORWARD_COMPAT = $00022006;
  GLFW_OPENGL_DEBUG_CONTEXT = $00022007;
  GLFW_OPENGL_PROFILE = $00022008;
  GLFW_CONTEXT_RELEASE_BEHAVIOR = $00022009;
  GLFW_CONTEXT_NO_ERROR = $0002200A;
  GLFW_CONTEXT_CREATION_API = $0002200B;
  GLFW_NO_API = 0;
  GLFW_OPENGL_API = $00030001;
  GLFW_OPENGL_ES_API = $00030002;
  GLFW_NO_ROBUSTNESS = 0;
  GLFW_NO_RESET_NOTIFICATION = $00031001;
  GLFW_LOSE_CONTEXT_ON_RESET = $00031002;
  GLFW_OPENGL_ANY_PROFILE = 0;
  GLFW_OPENGL_CORE_PROFILE = $00032001;
  GLFW_OPENGL_COMPAT_PROFILE = $00032002;
  GLFW_CURSOR = $00033001;
  GLFW_STICKY_KEYS = $00033002;
  GLFW_STICKY_MOUSE_BUTTONS = $00033003;
  GLFW_CURSOR_NORMAL = $00034001;
  GLFW_CURSOR_HIDDEN = $00034002;
  GLFW_CURSOR_DISABLED = $00034003;
  GLFW_ANY_RELEASE_BEHAVIOR = 0;
  GLFW_RELEASE_BEHAVIOR_FLUSH = $00035001;
  GLFW_RELEASE_BEHAVIOR_NONE = $00035002;
  GLFW_NATIVE_CONTEXT_API = $00036001;
  GLFW_EGL_CONTEXT_API = $00036002;
  GLFW_ARROW_CURSOR = $00036001;
  GLFW_IBEAM_CURSOR = $00036002;
  GLFW_CROSSHAIR_CURSOR = $00036003;
  GLFW_HAND_CURSOR = $00036004;
  GLFW_HRESIZE_CURSOR = $00036005;
  GLFW_VRESIZE_CURSOR = $00036006;
  GLFW_CONNECTED = $00040001;
  GLFW_DISCONNECTED = $00040002;
  GLFW_DONT_CARE = -1;

type
  TGLFWglproc = procedure(); cdecl;
  PGLFWmonitor = Pointer;
  PPGLFWmonitor = ^PGLFWmonitor;
  PGLFWwindow = Pointer;
  PPGLFWwindow = ^PGLFWwindow;
  PGLFWcursor = Pointer;
  PPGLFWcursor = ^PGLFWcursor;
  TGLFWerrorfun = procedure(error: Integer; const description: PAnsiChar); cdecl;
  TGLFWwindowposfun = procedure(window: PGLFWwindow; xpos, ypos: Integer); cdecl;
  TGLFWwindowsizefun = procedure(window: PGLFWwindow; Width, Height: Integer); cdecl;
  TGLFWwindowclosefun = procedure(window: PGLFWwindow); cdecl;
  TGLFWwindowrefreshfun = procedure(window: PGLFWwindow); cdecl;
  TGLFWwindowfocusfun = procedure(window: PGLFWwindow; focused: Integer); cdecl;
  TGLFWwindowiconifyfun = procedure(window: PGLFWwindow; iconified: Integer); cdecl;
  TGLFWframebuffersizefun = procedure(window: PGLFWwindow; Width, Height: Integer); cdecl;
  TGLFWmousebuttonfun = procedure(window: PGLFWwindow; button, action, mods: Integer); cdecl;
  TGLFWcursorposfun = procedure(window: PGLFWwindow; xpos, ypos: Double); cdecl;
  TGLFWcursorenterfun = procedure(window: PGLFWwindow; entered: Integer); cdecl;
  TGLFWscrollfun = procedure(window: PGLFWwindow; xoffset, yoffset: Double); cdecl;
  TGLFWkeyfun = procedure(window: PGLFWwindow; key, scancode, action, mods: Integer); cdecl;
  TGLFWcharfun = procedure(window: PGLFWwindow; codepoint: Cardinal); cdecl;
  TGLFWcharmodsfun = procedure(window: PGLFWwindow; codepoint: Cardinal; mods: Integer); cdecl;
  TGLFWdropfun = procedure(window: PGLFWwindow; Count: Integer; const paths: PPAnsiChar); cdecl;
  TGLFWmonitorfun = procedure(monitor: PGLFWmonitor; event: Integer); cdecl;
  TGLFWjoystickfun = procedure(joy, event: Integer); cdecl;

  TGLFWvidmode = record
    Width: Integer;
    Height: Integer;
    redBits: Integer;
    greenBits: Integer;
    blueBits: Integer;
    refreshRate: Integer;
  end;
  PGLFWvidmode = ^TGLFWvidmode;
  PPGLFWvidmode = ^PGLFWvidmode;

  TGLFWgammaramp = record
    red: PWord;
    green: PWord;
    blue: PWord;
    size: Cardinal;
  end;
  PGLFWgammaramp = ^TGLFWgammaramp;
  PPGLFWgammaramp = ^PGLFWgammaramp;

  TGLFWimage = record
    Width: Integer;
    Height: Integer;
    pixels: PByte;
  end;
  PGLFWimage = ^TGLFWimage;
  PPGLFWimage = ^PGLFWimage;

function glfwInit(): Integer; cdecl external GLFW3_LIB Name _PU + 'glfwInit';
procedure glfwTerminate(); cdecl external GLFW3_LIB Name _PU + 'glfwTerminate';
procedure glfwGetVersion(major, minor, rev: PInteger); cdecl external GLFW3_LIB Name _PU + 'glfwGetVersion';
function glfwGetVersionString(): PAnsiChar; cdecl external GLFW3_LIB Name _PU + 'glfwGetVersionString';
function glfwSetErrorCallback(cbfun: TGLFWerrorfun): TGLFWerrorfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetErrorCallback';
function glfwGetMonitors(out Count: Integer): PPGLFWmonitor; cdecl external GLFW3_LIB Name _PU + 'glfwGetMonitors';
function glfwGetPrimaryMonitor(): PGLFWmonitor; cdecl external GLFW3_LIB Name _PU + 'glfwGetPrimaryMonitor';
procedure glfwGetMonitorPos(monitor: PGLFWmonitor; xpos, ypos: PInteger); cdecl external GLFW3_LIB Name _PU + 'glfwGetMonitorPos';
procedure glfwGetMonitorPhysicalSize(monitor: PGLFWmonitor; widthMM, heightMM: PInteger); cdecl external GLFW3_LIB Name _PU + 'glfwGetMonitorPhysicalSize';
function glfwGetMonitorName(monitor: PGLFWmonitor): PAnsiChar; cdecl external GLFW3_LIB Name _PU + 'glfwGetMonitorName';
function glfwSetMonitorCallback(cbfun: TGLFWmonitorfun): TGLFWmonitorfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetMonitorCallback';
function glfwGetVideoModes(monitor: PGLFWmonitor; out Count: Integer): PGLFWvidmode; cdecl external GLFW3_LIB Name _PU + 'glfwGetVideoModes';
function glfwGetVideoMode(monitor: PGLFWmonitor): PGLFWvidmode; cdecl external GLFW3_LIB Name _PU + 'glfwGetVideoMode';
procedure glfwSetGamma(monitor: PGLFWmonitor; gamma: Single); cdecl external GLFW3_LIB Name _PU + 'glfwSetGamma';
function glfwGetGammaRamp(monitor: PGLFWmonitor): PGLFWgammaramp; cdecl external GLFW3_LIB Name _PU + 'glfwGetGammaRamp';
procedure glfwSetGammaRamp(monitor: PGLFWmonitor; const ramp: PGLFWgammaramp); cdecl external GLFW3_LIB Name _PU + 'glfwSetGammaRamp';
procedure glfwDefaultWindowHints(); cdecl external GLFW3_LIB Name _PU + 'glfwDefaultWindowHints';
procedure glfwWindowHint(hint: Integer; Value: Integer); cdecl external GLFW3_LIB Name _PU + 'glfwWindowHint';
function glfwCreateWindow(Width: Integer; Height: Integer; const title: PAnsiChar; monitor: PGLFWmonitor; share: PGLFWwindow): PGLFWwindow; cdecl external GLFW3_LIB Name _PU + 'glfwCreateWindow';
procedure glfwDestroyWindow(window: PGLFWwindow); cdecl external GLFW3_LIB Name _PU + 'glfwDestroyWindow';
function glfwWindowShouldClose(window: PGLFWwindow): Integer; cdecl external GLFW3_LIB Name _PU + 'glfwWindowShouldClose';
procedure glfwSetWindowShouldClose(window: PGLFWwindow; Value: Integer); cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowShouldClose';
procedure glfwSetWindowTitle(window: PGLFWwindow; const title: PAnsiChar); cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowTitle';
procedure glfwSetWindowIcon(window: PGLFWwindow; Count: Integer; const images: PGLFWimage); cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowIcon';
procedure glfwGetWindowPos(window: PGLFWwindow; xpos, ypos: PInteger); cdecl external GLFW3_LIB Name _PU + 'glfwGetWindowPos';
procedure glfwSetWindowPos(window: PGLFWwindow; xpos, ypos: Integer); cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowPos';
procedure glfwGetWindowSize(window: PGLFWwindow; Width, Height: PInteger); cdecl external GLFW3_LIB Name _PU + 'glfwGetWindowSize';
procedure glfwSetWindowSizeLimits(window: PGLFWwindow; minwidth, minheight, maxwidth, maxheight: Integer); cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowSizeLimits';
procedure glfwSetWindowAspectRatio(window: PGLFWwindow; numer, denom: Integer); cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowAspectRatio';
procedure glfwSetWindowSize(window: PGLFWwindow; Width, Height: Integer); cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowSize';
procedure glfwGetFramebufferSize(window: PGLFWwindow; Width, Height: PInteger); cdecl external GLFW3_LIB Name _PU + 'glfwGetFramebufferSize';
procedure glfwGetWindowFrameSize(window: PGLFWwindow; left, top, right, bottom: PInteger); cdecl external GLFW3_LIB Name _PU + 'glfwGetWindowFrameSize';
procedure glfwIconifyWindow(window: PGLFWwindow); cdecl external GLFW3_LIB Name _PU + 'glfwIconifyWindow';
procedure glfwRestoreWindow(window: PGLFWwindow); cdecl external GLFW3_LIB Name _PU + 'glfwRestoreWindow';
procedure glfwMaximizeWindow(window: PGLFWwindow); cdecl external GLFW3_LIB Name _PU + 'glfwMaximizeWindow';
procedure glfwShowWindow(window: PGLFWwindow); cdecl external GLFW3_LIB Name _PU + 'glfwShowWindow';
procedure glfwHideWindow(window: PGLFWwindow); cdecl external GLFW3_LIB Name _PU + 'glfwHideWindow';
procedure glfwFocusWindow(window: PGLFWwindow); cdecl external GLFW3_LIB Name _PU + 'glfwFocusWindow';
function glfwGetWindowMonitor(window: PGLFWwindow): PGLFWmonitor; cdecl external GLFW3_LIB Name _PU + 'glfwGetWindowMonitor';
procedure glfwSetWindowMonitor(window: PGLFWwindow; monitor: PGLFWmonitor; xpos, ypos, Width, Height, refreshRate: Integer); cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowMonitor';
function glfwGetWindowAttrib(window: PGLFWwindow; attrib: Integer): Integer; cdecl external GLFW3_LIB Name _PU + 'glfwGetWindowAttrib';
procedure glfwSetWindowUserPointer(window: PGLFWwindow; pointer: Pointer); cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowUserPointer';
function glfwGetWindowUserPointer(window: PGLFWwindow): Pointer; cdecl external GLFW3_LIB Name _PU + 'glfwGetWindowUserPointer';
function glfwSetWindowPosCallback(window: PGLFWwindow; cbfun: TGLFWwindowposfun): TGLFWwindowposfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowPosCallback';
function glfwSetWindowSizeCallback(window: PGLFWwindow; cbfun: TGLFWwindowsizefun): TGLFWwindowsizefun; cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowSizeCallback';
function glfwSetWindowCloseCallback(window: PGLFWwindow; cbfun: TGLFWwindowclosefun): TGLFWwindowclosefun; cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowCloseCallback';
function glfwSetWindowRefreshCallback(window: PGLFWwindow; cbfun: TGLFWwindowrefreshfun): TGLFWwindowrefreshfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowRefreshCallback';
function glfwSetWindowFocusCallback(window: PGLFWwindow; cbfun: TGLFWwindowfocusfun): TGLFWwindowfocusfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowFocusCallback';
function glfwSetWindowIconifyCallback(window: PGLFWwindow; cbfun: TGLFWwindowiconifyfun): TGLFWwindowiconifyfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetWindowIconifyCallback';
function glfwSetFramebufferSizeCallback(window: PGLFWwindow; cbfun: TGLFWframebuffersizefun): TGLFWframebuffersizefun; cdecl external GLFW3_LIB Name _PU + 'glfwSetFramebufferSizeCallback';
procedure glfwPollEvents(); cdecl external GLFW3_LIB Name _PU + 'glfwPollEvents';
procedure glfwWaitEvents(); cdecl external GLFW3_LIB Name _PU + 'glfwWaitEvents';
procedure glfwWaitEventsTimeout(timeout: Double); cdecl external GLFW3_LIB Name _PU + 'glfwWaitEventsTimeout';
procedure glfwPostEmptyEvent(); cdecl external GLFW3_LIB Name _PU + 'glfwPostEmptyEvent';
function glfwGetInputMode(window: PGLFWwindow; mode: Integer): Integer; cdecl external GLFW3_LIB Name _PU + 'glfwGetInputMode';
procedure glfwSetInputMode(window: PGLFWwindow; mode, Value: Integer); cdecl external GLFW3_LIB Name _PU + 'glfwSetInputMode';
function glfwGetKeyName(key: Integer; scancode: Integer): PAnsiChar; cdecl external GLFW3_LIB Name _PU + 'glfwGetKeyName';
function glfwGetKey(window: PGLFWwindow; key: Integer): Integer; cdecl external GLFW3_LIB Name _PU + 'glfwGetKey';
function glfwGetMouseButton(window: PGLFWwindow; button: Integer): Integer; cdecl external GLFW3_LIB Name _PU + 'glfwGetMouseButton';
procedure glfwGetCursorPos(window: PGLFWwindow; xpos, ypos: PDouble); cdecl external GLFW3_LIB Name _PU + 'glfwGetCursorPos';
procedure glfwSetCursorPos(window: PGLFWwindow; xpos, ypos: Double); cdecl external GLFW3_LIB Name _PU + 'glfwSetCursorPos';
function glfwCreateCursor(const image: PGLFWimage; xhot: Integer; yhot: Integer): PGLFWcursor; cdecl external GLFW3_LIB Name _PU + 'glfwCreateCursor';
function glfwCreateStandardCursor(shape: Integer): PGLFWcursor; cdecl external GLFW3_LIB Name _PU + 'glfwCreateStandardCursor';
procedure glfwDestroyCursor(cursor: PGLFWcursor); cdecl external GLFW3_LIB Name _PU + 'glfwDestroyCursor';
procedure glfwSetCursor(window: PGLFWwindow; cursor: PGLFWcursor); cdecl external GLFW3_LIB Name _PU + 'glfwSetCursor';
function glfwSetKeyCallback(window: PGLFWwindow; cbfun: TGLFWkeyfun): TGLFWkeyfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetKeyCallback';
function glfwSetCharCallback(window: PGLFWwindow; cbfun: TGLFWcharfun): TGLFWcharfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetCharCallback';
function glfwSetCharModsCallback(window: PGLFWwindow; cbfun: TGLFWcharmodsfun): TGLFWcharmodsfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetCharModsCallback';
function glfwSetMouseButtonCallback(window: PGLFWwindow; cbfun: TGLFWmousebuttonfun): TGLFWmousebuttonfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetMouseButtonCallback';
function glfwSetCursorPosCallback(window: PGLFWwindow; cbfun: TGLFWcursorposfun): TGLFWcursorposfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetCursorPosCallback';
function glfwSetCursorEnterCallback(window: PGLFWwindow; cbfun: TGLFWcursorenterfun): TGLFWcursorenterfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetCursorEnterCallback';
function glfwSetScrollCallback(window: PGLFWwindow; cbfun: TGLFWscrollfun): TGLFWscrollfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetScrollCallback';
function glfwSetDropCallback(window: PGLFWwindow; cbfun: TGLFWdropfun): TGLFWdropfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetDropCallback';
function glfwJoystickPresent(joy: Integer): Integer; cdecl external GLFW3_LIB Name _PU + 'glfwJoystickPresent';
function glfwGetJoystickAxes(joy: Integer; out Count: Integer): PSingle; cdecl external GLFW3_LIB Name _PU + 'glfwGetJoystickAxes';
function glfwGetJoystickButtons(joy: Integer; out Count: Integer): PByte; cdecl external GLFW3_LIB Name _PU + 'glfwGetJoystickButtons';
function glfwGetJoystickName(joy: Integer): PAnsiChar; cdecl external GLFW3_LIB Name _PU + 'glfwGetJoystickName';
function glfwSetJoystickCallback(cbfun: TGLFWjoystickfun): TGLFWjoystickfun; cdecl external GLFW3_LIB Name _PU + 'glfwSetJoystickCallback';
procedure glfwSetClipboardString(window: PGLFWwindow; const Text: PAnsiChar); cdecl external GLFW3_LIB Name _PU + 'glfwSetClipboardString';
function glfwGetClipboardString(window: PGLFWwindow): PAnsiChar; cdecl external GLFW3_LIB Name _PU + 'glfwGetClipboardString';
function glfwGetTime(): Double; cdecl external GLFW3_LIB Name _PU + 'glfwGetTime';
procedure glfwSetTime(time: Double); cdecl external GLFW3_LIB Name _PU + 'glfwSetTime';
function glfwGetTimerValue(): UInt64; cdecl external GLFW3_LIB Name _PU + 'glfwGetTimerValue';
function glfwGetTimerFrequency(): UInt64; cdecl external GLFW3_LIB Name _PU + 'glfwGetTimerFrequency';
procedure glfwMakeContextCurrent(window: PGLFWwindow); cdecl external GLFW3_LIB Name _PU + 'glfwMakeContextCurrent';
function glfwGetCurrentContext(): PGLFWwindow; cdecl external GLFW3_LIB Name _PU + 'glfwGetCurrentContext';
procedure glfwSwapBuffers(window: PGLFWwindow); cdecl external GLFW3_LIB Name _PU + 'glfwSwapBuffers';
procedure glfwSwapInterval(interval: Integer); cdecl external GLFW3_LIB Name _PU + 'glfwSwapInterval';
function glfwExtensionSupported(const extension: PAnsiChar): Integer; cdecl external GLFW3_LIB Name _PU + 'glfwExtensionSupported';
function glfwGetProcAddress(const procname: PAnsiChar): TGLFWglproc; cdecl external GLFW3_LIB Name _PU + 'glfwGetProcAddress';
function glfwVulkanSupported(): Integer; cdecl external GLFW3_LIB Name _PU + 'glfwVulkanSupported';
function glfwGetRequiredInstanceExtensions(out Count: UInt32): PPAnsiChar; cdecl external GLFW3_LIB Name _PU + 'glfwGetRequiredInstanceExtensions';
function glfwGetWin32Adapter(monitor: PGLFWmonitor): PAnsiChar; cdecl external GLFW3_LIB Name _PU + 'glfwGetWin32Adapter';
function glfwGetWin32Monitor(monitor: PGLFWmonitor): PAnsiChar; cdecl external GLFW3_LIB Name _PU + 'glfwGetWin32Monitor';
function glfwGetWin32Window(window: PGLFWwindow): QWord; cdecl external GLFW3_LIB Name _PU + 'glfwGetWin32Window';
function glfwGetWGLContext(window: PGLFWwindow): QWord; cdecl external GLFW3_LIB Name _PU + 'glfwGetWGLContext';

implementation

end.
